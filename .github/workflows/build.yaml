name: Build image

on:
  push:

env:
  REGISTRY: ghcr.io/neracastle
  IMAGE_NAME: auth-service
  GHOST: 127.0.0.1
  GPORT: 50501

jobs:
  linter_and_test:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.20'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0

      - name: Test
        run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    needs: linter_and_test
    steps:
        - uses: actions/checkout@v4

        - name: Login to registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v3
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: type=sha

        - name: Build docker image
          timeout-minutes: 7
          id: build
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read

    steps:
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit SHA tag
        id: sha-tag
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha

      - name: Deploy to Selectel
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GHOST,GPORT
          script: |
            IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.sha-tag.tags }}
            echo $IMAGE
            docker pull $IMAGE
            docker stop auth-service
            docker rm auth-service
          
            docker run -d -p $GPORT:$GPORT --env GHOST=$GHOST --env GPORT=$GPORT --name auth-service -t $IMAGE